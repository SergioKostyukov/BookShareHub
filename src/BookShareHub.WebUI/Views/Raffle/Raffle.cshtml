@model RaffleModel
@inject IConfiguration Configuration

<div class="row" style="height: 85vh;">
	<div class="col-md-8" style="height: 100%;">
		<div class="background-block" style="height: 100%;">
			<div class="title-block">
				<div id="carouselExampleControls" class="carousel slide" data-bs-ride="carousel">
					<div class="carousel-inner">
						@foreach (var item in Model.RaffleList)
						{
							<div class="carousel-item @(item == Model.RaffleList.First() ? "active" : "")">
								<img src="@item.ImagePath" asp-append-version="true" class="img-fluid" alt="Book Image" style="max-height: 250px;">
								<div class="card-body">
									<h5 class="card-title">@item.Title</h5>
									<p class="card-text">@item.Author</p>
								</div>
							</div>
						}
					</div>

					@if (Model.RaffleList.Count() > 1)
					{
						<button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="prev">
							<span class="carousel-control-prev-icon" aria-hidden="true"></span>
							<span class="visually-hidden">Previous</span>
						</button>
						<button class="carousel-control-next" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="next">
							<span class="carousel-control-next-icon" aria-hidden="true"></span>
							<span class="visually-hidden">Next</span>
						</button>
					}
				</div>
			</div>
			<div class="card-body">
				<p>@Localizer["Type"]: @Model.Raffle.Type</p>
				<p>@Localizer["Description"]: @Model.Raffle.Description</p>
				<p>@Localizer["Ticket price"]: @Model.Raffle.TicketPrice.ToString("C")</p>
				<p>@Localizer["End time"]: @Model.Raffle.EndDateTime</p>
			</div>
		</div>
	</div>

	<div class="col-md-4" style="height: 100%;">
		<div class="background-block" style="height: 100%;">
			<div class="nested-block" style="height: 30%;">
				<h3>@Localizer["Owner statistic"]</h3>
				<div class="card-body">
					<p>@Localizer["OwnerName"]: @Model.Owner.UserName</p>
					<p>
						@Localizer["Rating"]:
						@if (Model.Owner.Rating != null)
						{
							@for (int i = 0; i < (int)Model.Owner.Rating; i++)
							{
								<span>&#9733;</span>
							}
						}
						else
						{
							@Localizer["no rating"]
						}
					</p>
				</div>
				<form class="btn-container" method="post" action="@Url.Action("Chat", "Chat")">
					<button type="submit" class="btn btn-primary">@Localizer["Write message"]</button>
				</form>
			</div>

			<div class="nested-block" style="height: 70%; margin-bottom: 10px">
				<form method="post" action="@Url.Action("ConfirmRaffleParticipate", "Raffle")">
					<h3>@Localizer["Order info"]</h3>
					<div class="card-body">
						<div class="delivery-block">
							<label for="fullName">@Localizer["Full name"]:</label>
							<input type="text" id="fullName" name="DeliveryParams.DeliveryUserFullName"
								   class="form-control" placeholder="@Localizer["Enter your full name"]">

							<label for="phoneMunber">@Localizer["Phone number"]:</label>
							<input type="text" id="phoneMunber" name="DeliveryParams.DeliveryUserPhoneNumber"
								   class="form-control" placeholder="@Localizer["Enter your phone number"]">

							<label for="city">@Localizer["City"]:</label>
							<div class="delivery-line">
								<input type="text" id="city" name="DeliveryParams.DeliveryCityFullAddress" class="form-control" placeholder="@Localizer["Enter city name"]">
								<input type="hidden" id="cityTitle" name="DeliveryParams.DeliveryCityShortAddress">
								<ul id="city-list"></ul>
							</div>

							<label for="address">@Localizer["Parcel delivery point"]:</label>
							<div class="delivery-line">
								<input type="text" id="address" name="DeliveryParams.DeliverySpecificAddress" class="form-control" placeholder="@Localizer["Enter name/number/address"]">
								<ul id="point-list"></ul>
							</div>
						</div>

						<div class="ticket-buying">
							<h4>Ticket Buying</h4>
							<div class="quantity-selector">
								<button id="decrease-btn" type="button">-</button>
								<input type="number" id="ticket-quantity" name="TicketsCount" value="1" min="1" readonly>
								<button id="increase-btn" type="button">+</button>
							</div>
						</div>
					</div>

					<input type="hidden" asp-for="Raffle.Id" />
					<button type="submit" class="btn btn-primary">@Localizer["Participate"] for <span id="amount-check">@Model.Raffle.TicketPrice</span></button>
				</form>
			</div>
		</div>
	</div>
</div>

@section Scripts {
	<script>
		var currentIndex = 0;
		var raffleList = @Html.Raw(Json.Serialize(Model.RaffleList));

		function showProduct(index) {
			var product = raffleList[index];
			document.getElementById("author").innerText = product.Author;
			document.getElementById("description").innerText = product.Description;
			document.getElementById("language").innerText = product.Language;
			document.getElementById("price").innerText = product.Price;
		}

		function showPreviousProduct() {
			if (currentIndex > 0) {
				currentIndex--;
			} else {
				currentIndex = raffleList.length - 1;
			}
			showProduct(currentIndex);
		}

		function showNextProduct() {
			if (currentIndex < raffleList.length - 1) {
				currentIndex++;
			} else {
				currentIndex = 0;
			}
			showProduct(currentIndex);
		}

		showProduct(currentIndex);
	</script>
	<script>
		var novaPoshtaApiKey = "@Configuration["AppSettings:NovaPoshtaApiKey"]";
	</script>
	<script>
		document.addEventListener("DOMContentLoaded", function () {
			const decreaseBtn = document.getElementById("decrease-btn");
			const increaseBtn = document.getElementById("increase-btn");
			const quantityInput = document.getElementById("ticket-quantity");
			const amountCheck = document.getElementById("amount-check");
			const ticketPrice = parseFloat("@Model.Raffle.TicketPrice");

			function updateAmount() {
				const count = parseInt(quantityInput.value);
				const totalAmount = ticketPrice * count;
				amountCheck.textContent = totalAmount.toFixed(2);
			}

			decreaseBtn.addEventListener("click", function () {
				const currentValue = parseInt(quantityInput.value);
				if (currentValue > 1) {
					quantityInput.value = currentValue - 1;
					updateAmount();
				}
			});

			increaseBtn.addEventListener("click", function () {
				const currentValue = parseInt(quantityInput.value);
				quantityInput.value = currentValue + 1;
				updateAmount();
			});

			quantityInput.addEventListener("input", updateAmount);
		});
	</script>
	<script src="~/js/Order/FindCity.js" asp-append-version="true"></script>
	<script src="~/js/Order/FindSpecificAddress.js" asp-append-version="true"></script>
}

@section Styles {
	<link rel="stylesheet" href="~/css/backgroundBlock.css" asp-append-version="true" />
	<link rel="stylesheet" href="~/css/preOrder.css" asp-append-version="true" />
	<link rel="stylesheet" href="~/css/raffle.css" asp-append-version="true" />
}